apiVersion: apps/v1
kind: Deployment
metadata:
  name: balance-mgmt-api
  labels:
    app: balance-mgmt-api
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  selector:
    matchLabels:
      app: balance-mgmt-api
  template:
    metadata:
      labels:
        app: balance-mgmt-api
    spec:
      containers:
      - name: balance-mgmt-api
        image: ryantangdev/balance-mgmt:1.7.RELEASE
        ports:
        - containerPort: 8080
        env:
        - name: SPRING_DATASOURCE_URL
          value: jdbc:mysql://host.docker.internal:3306/balance_db
        - name: SPRING_DATASOURCE_USERNAME
          valueFrom:
            secretKeyRef:
              name: db-credentials
              key: username
        - name: SPRING_DATASOURCE_PASSWORD
          valueFrom:
            secretKeyRef:
              name: db-credentials
              key: password
        - name: SPRING_REDIS_URL
          value: redis://host.docker.internal:6379
        - name: SPRING_REDIS_HOST
          value: host.docker.internal
        - name: SPRING_REDIS_PORT
          value: "6379"
        - name: SPRING_REDIS_USERNAME
          value: "myuser"
        - name: SPRING_REDIS_PASSWORD
          value: "myuser_password"
        resources:
          limits:
            memory: "512Mi"
            cpu: "500m"
          requests:
            memory: "256Mi"
            cpu: "250m"
        livenessProbe:
          httpGet:
            path: /actuator/health
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /actuator/health
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 10
      imagePullSecrets:
      - name: regcred
